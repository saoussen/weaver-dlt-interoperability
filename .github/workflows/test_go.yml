name: Unit Test Fabric Interop CC and Sample Chaincode

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test_interopcc_github:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
 
    - name: Build
      run: go build -v ./...
      working-directory: core/network/fabric-interop-cc/contracts/interop

    - name: Test
      run: go test -v ./...
      working-directory: core/network/fabric-interop-cc/contracts/interop

  test_interopcc_local:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Local Setup
      run: |
        mv go.mod go.mod.bkp
        cp go.mod.local go.mod
        cp -r ../../../../../common/protos-go ./protos-go
        cp -r ../../libs ./libs
        rm go.sum
        go mod tidy
      working-directory: core/network/fabric-interop-cc/contracts/interop

    - name: Build
      run: go build -v ./...
      working-directory: core/network/fabric-interop-cc/contracts/interop

    - name: Test
      run: go test -v ./...
      working-directory: core/network/fabric-interop-cc/contracts/interop

  test_assetmgmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Build
      run: go build -v ./...
      working-directory: core/network/fabric-interop-cc/interfaces/asset-mgmt

    - name: Test
      run: go test -v ./...
      working-directory: core/network/fabric-interop-cc/interfaces/asset-mgmt

  test_simplestate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Build
      run: go build -v ./...
      working-directory: samples/fabric/simplestate

    - name: Test
      run: make test
      working-directory: samples/fabric/simplestate
 
  test_simpleasset_github:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Build
      run: go build -v ./...
      working-directory: samples/fabric/simpleasset

    - name: Test
      run: go test -v ./...
      working-directory: samples/fabric/simpleasset

  test_simpleasset_local:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Setup
      run: |
        GOMODCACHE=`go env GOMODCACHE`
        echo "GO MOD Path: ${GOMODCACHE}"
        go mod download github.com/hyperledger-labs/weaver-dlt-interoperability/common/protos-go
        chmod +wr -R ${GOMODCACHE}
        rm -rf ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/common/protos-go*/*
        cp -r ../../../common/protos-go/* ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/common/protos-go*/
        ls -lh ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/common/protos-go*
        go mod download github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/interfaces/asset-mgmt
        chmod +wr -R ${GOMODCACHE}
        rm -rf ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/interfaces/asset-mgmt*/*
        cp -r ../../../core/network/fabric-interop-cc/interfaces/asset-mgmt/* ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/interfaces/asset-mgmt*/
        ls -lh ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/interfaces/asset-mgmt*
        go mod download github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/libs/testutils
        chmod +wr -R ${GOMODCACHE}
        rm -rf ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/libs/testutils*/*
        cp -r ../../../core/network/fabric-interop-cc/libs/testutils/* ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/libs/testutils*/
        ls -lh ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/libs/testutils*
      working-directory: samples/fabric/simpleasset

    - name: Build
      run: go build -v ./...
      working-directory: samples/fabric/simpleasset

    - name: Test
      run: go test -v ./...
      working-directory: samples/fabric/simpleasset

  test_simpleassetandinterop_github:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Build
      run: go build -v ./...
      working-directory: samples/fabric/simpleassetandinterop

    - name: Test
      run: go test -v ./...
      working-directory: samples/fabric/simpleassetandinterop

  test_simpleassetandinterop_local:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Setup
      run: |
        GOMODCACHE=`go env GOMODCACHE`
        echo "GO MOD Path: ${GOMODCACHE}"
        go mod download github.com/hyperledger-labs/weaver-dlt-interoperability/common/protos-go
        chmod +wr -R ${GOMODCACHE}
        rm -rf ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/common/protos-go*/*
        cp -r ../../../common/protos-go/* ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/common/protos-go*/
        ls -lh ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/common/protos-go*
        go mod download github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/libs/assetexchange
        chmod +wr -R ${GOMODCACHE}
        rm -rf ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/libs/assetexchange*/*
        cp -r ../../../core/network/fabric-interop-cc/libs/assetexchange/* ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/libs/assetexchange*/
        ls -lh ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/libs/assetexchange*
        go mod download github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/libs/testutils
        chmod +wr -R ${GOMODCACHE}
        rm -rf ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/libs/testutils*/*
        cp -r ../../../core/network/fabric-interop-cc/libs/testutils/* ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/libs/testutils*/
        ls -lh ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/libs/testutils*
      working-directory: samples/fabric/simpleassetandinterop

    - name: Build
      run: go build -v ./...
      working-directory: samples/fabric/simpleassetandinterop

    - name: Test
      run: go test -v ./...
      working-directory: samples/fabric/simpleassetandinterop

  test_simpleassettransfer_github:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Setup
      run: |
        GOMODCACHE=`go env GOMODCACHE`
        echo "GO MOD Path: ${GOMODCACHE}"
        go mod download github.com/hyperledger-labs/weaver-dlt-interoperability/common/protos-go
        chmod +wr -R ${GOMODCACHE}
        rm -rf ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/common/protos-go*/*
        cp -r ../../../common/protos-go/* ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/common/protos-go*/
        ls -lh ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/common/protos-go*
        go mod download github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/interfaces/asset-mgmt
        chmod +wr -R ${GOMODCACHE}
        rm -rf ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/interfaces/asset-mgmt*/*
        cp -r ../../../core/network/fabric-interop-cc/interfaces/asset-mgmt/* ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/interfaces/asset-mgmt*/
        ls -lh ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/interfaces/asset-mgmt*
        go mod download github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/libs/testutils
        chmod +wr -R ${GOMODCACHE}
        rm -rf ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/libs/testutils*/*
        cp -r ../../../core/network/fabric-interop-cc/libs/testutils/* ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/libs/testutils*/
        ls -lh ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/libs/testutils*
        go mod download github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/libs/utils
        chmod +wr -R ${GOMODCACHE}
        rm -rf ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/libs/utils*/*
        cp -r ../../../core/network/fabric-interop-cc/libs/utils/* ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/libs/utils*/
        ls -lh ${GOMODCACHE}/github.com/hyperledger-labs/weaver-dlt-interoperability/core/network/fabric-interop-cc/libs/utils*
      working-directory: samples/fabric/simpleassettransfer

    - name: Build
      run: go build -v ./...
      working-directory: samples/fabric/simpleassettransfer

    - name: Test
      run: go test -v ./...
      working-directory: samples/fabric/simpleassettransfer

  test_simpleassettransfer_local:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Build
      run: make build-local
      working-directory: samples/fabric/simpleassettransfer

    - name: Test
      run: make test-local
      working-directory: samples/fabric/simpleassettransfer

